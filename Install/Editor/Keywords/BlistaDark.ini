BSconnect= = IP$,port,password$,state$ - Connect the client code to the Blista Diagnostic Screen
BSAutoStart= =IP$,port - Start Blista Diagnostic Screen on an AutoStart enabled Remote PC
BScWindow= =X and Y Coords for window position
BScLink= =Cell,Vdu
BScDisable= =Panel$ ie.. BScDisable "text" - closes the text panel - options..."text" / "watch" / "log" / "vdu"
BSDisconnect= =No Parameters - Disconnects client code from the Blista Diagnostic screen
BScCls= =No Parameters- Clears Blista Screen - does not reset Links / Matches etc.
BScEnable= =Option String - ie BScEnable "watch" - opens the watch panel
BSsq= =Start a Queue of BSc Controls - See Help for detailed information
BSpq= =Process a Queue See Help for detailed information
BSl= =String$ output to Log panel ie.. BSl "Hello World"
BSv= =Value (Int/Float),Label$,Vdu Number - Send Value to VDu Number - see Help for Auto & Range Mode Settings
BSt= ="String$,label$,Cell - Send String$ with Label$ to Cell on Text panel - "" for Label-OK 
BSd= =Value = Double Float ( Int / Float ( 64 Bit ),Label$,Watch Cell Number -"" for Label-OK - See Help for detailed information on Floating point numbers
BSi= =Value = Double Int ( 64 bit ),Label$,Cell  - Send 64 bit Integer with Label$ to Watch Cell - "" for Label-OK 
BSs= =String$ ,Label$,Cell - Send String$ with Label$ to Watch Cell - "" for Label-OK 
BSwl= =Label$,Cell - Send Label$ to Watch cell Label Field ie.. BSs "Label Watch cell 2",2
BStl= =Label$,Cell - Send Label$ to Text cell Label Field ie.. BSs "Label Text cell 2",2
BSvl= =Label$,Cell - Send Label$ to VDU cell Label Field ie.. BSs "Label VDU cell 2",1
BScMake= =Type$..ie ( "watch" / "text" / "vdu" ),number  :- ie.. BScMake  "watch",40  :rem  make 40 watch cells - See Help For all make options
BScVdu= =Vdu,Action$) - ie.. BScVdu 0,"rangemode,100,750" - Set all Vdu to Range mode with lo / hi values 100 to 750 - See Help File for all BScVdu options
BScWindowWidth= =Window-Width-Value - Max same as desktop on Standard and  Professional
BScLoad= =String$... ("A"-"F") - Load the Previously saved Diagnostic Screen Set up A-F
BScSave= =String$...("A"-"F") - Save a Blista Diagnostic screen set up under A-F
BScReset= =(Panel$) ..ie BScReset "text" rem Reset Text Panel options = "text" / "watch" / "vdu" 
BscResetMatch= =( Cell or 0 for Global ) - Reset any existing Match / Range 
BscResetMatchAll= =Reset all Matches (No Parameters)
BStimerVerbose= =State as String ie. "on" or "off".."on" = timer output to log  
BStimerStart= =(FUNCTION):Timer Name (String$) - Returns Result  1(timer exists) / 2 = ( new Timer created)
BStimerStop= =(FUNCTION):(Timer Name (String$) - Returns Result timers current run value in Result
BStimerReset= =(FUNCTION):(Timer Name(String$)-Stops Timer and clears accumulated value. Result 1(reset OK) / 2( Not Found)                
BStimerMax= =(FUNCTION):(TimerName$) Result = Highest duration for  timers run values
BStimerMIn= =(FUNCTION):(Timername$) Result = Minumum duration for this timers values
BStimerRead= =(FUNCTION):(TimerName$) Result = This timers accumulated value from all runs
BStimerDelete= =(FUNCTION):(Timername$) deletes the timer and timer's accumulated value. result  1 - timer deleted OK.  0 - timer not found.
BStimerAverage= =(FUNCTION):(TimerName$) Result = Average value for "TimerName$"  run values
BStimerList= =(FUNCTION): (Timername$)  the current status, value, and description of the specified timer. - 
is written to the Log Screen. If empty String then all Timer Specs are written to Log Screen

BSdumpFile= =filename$,offset.Double int,rows,headerRow,blocksPerRow,entriesPerBlock
BScLink= =Cell,Vdu Link WatchCell (Cell) to VDU (Vdu)

BScMatchCell= =Cell,Value.double float (int or Floating point,String$ ( action on Match - "Stop" / "Cont" /  timed pause value (int)DBPro - Matching requires Like for LIke Parameters and output - See Help

BScMatchRange= =Cell,Lo Val.Double Float,Hi Val.double Float ,String$(Action on match),String$ - "in" /"out" ( in range or out of range) - DBPro - Matching requires Like for LIke Parameters and output - See Help

BSregion= = RegionName$,cell start,option(0-3),Label$
BSregionRestart= =RegionName$ - Reset cell to start cell in this Region
BSreadRegion= =(FUNCTION): RegionName$ - Returns Result = Start cell of RegionName$

BScMm= =cell or 0 for Global ..reset matches made

BScRm= =cell or 0 for Global ...reset ranges made

BScunlink= =cell .. cell to unlink

BscFont= =String$ -  " fontSize , mainFont , monoSpacedFont  " 
BscResetRangeAll= =No Parameters.. Reset all ranges
BsDisplayFormatw= = ( FUNCTION )String$,Cell ( See Help ) - Returns Integer code for BSDFw instruction
BSDisplayFormatv= = (FUNCTION)String$,Vdu (See Help ) - Returns Integer for BSDFv instruction

BSNxt= =( FUNCTION ) Cell - set up start cell for auto watchcell value output
BSTNxt= =( FUNCTION) Cell - set up start cell for Textcell value output
BScolumn= =( FUNCTION ) ColumnNumber - result returns the cell number of requested column 
BSWLNxt= =( FUNCTION) Cell - set up start cell for WatchCell Label output
BSTLNxt= =( FUNCTION) Cell - set up start cell for TextCell Label output
BSDFw= =( FUNCTION) FormatCode,watchcell - Set watchcell to FormatCode for output
BSDFv= =( FUNCTION) FormatCode,VDU - Set VDU to FormatCode for output
BScQuit= =No Parameters - Shut down the Blista Diagnostics Screen
BScDim= =Dimming-Name$ .. Load the Dimming-Name$ into the Diagnostic Screen
BSLocal= =No Parameters - Connect to Local Diagnostic screen on Port 8888
BScResume= = No Parameters - Resume Data Input during Pause on Match
BSCache= = State$ - "on" / "off" .. turns the Blista Cache on or off - See Help for further info
BSDFwGlobal = =FormatCode - Set All watchcell to FormatCode for output
BSDFvGlobal= =FormatCode - Set All VDUcell to FormatCode for output
BSbp= =Value - Stop the user program with step / quit options at value - see help








